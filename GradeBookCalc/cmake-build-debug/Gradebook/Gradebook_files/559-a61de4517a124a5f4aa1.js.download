(window.webpackJsonp=window.webpackJsonp||[]).push([[559],{"2lxm":function(e,t,s){"use strict";s.d(t,"a",(function(){return d})),s.d(t,"b",(function(){return c}));var r=s("D57K"),i=s("Llzl"),a=s("pjml"),n=s("aHpC"),o=s("IbyE"),l=s("9OUN");const d="ultra.service.gradable-item-user-option",c="gradableItemUserOptionService";let u=class{constructor(e,t,s){this.$rootScope=e,this.$q=t,this.$ngRedux=s,this.subscribeToRedux()}subscribeToRedux(){const e=this.$ngRedux.connect(null,(e=>Object(l.b)({persistGradableItemUserOption:o.X.gradableItemUserOption.persistGradableItemUserOption,deleteGradableItemUserOption:o.X.gradableItemUserOption.deleteGradableItemUserOption,fetchGradableItemUserOption:o.X.gradableItemUserOption.fetchGradableItemUserOption,fetchGradableItemUserOptionCount:o.X.gradableItemUserOption.fetchGradableItemUserOptionCount,fetchGradableItemUserOptionExceptions:o.X.gradableItemUserOption.fetchGradableItemUserOptionExceptions},e)))(this);this.$rootScope.$on("$destroy",e)}updateGradableItemUserOption(e,t){return this.$q.when(this.persistGradableItemUserOption(e,t)).then((e=>e.item))}removeGradableItemUserOption(e){return this.$q.when(this.deleteGradableItemUserOption(e)).then((e=>e))}getGradableItemUserOption(e,t,s){const r={courseId:e,columnId:t},i={membershipIds:s};return this.$q.resolve(this.fetchGradableItemUserOption(r,i))}getGradableItemUserOptionExceptions(e,t,s,r){const i={courseId:e,membershipId:t},a={columnId:s,isExcludedFromCourseUserActivity:r};return this.$q.resolve(this.fetchGradableItemUserOptionExceptions(i,a))}getGradableItemUserOptionCount(e,t){const s={courseId:e,columnId:t};return this.$q.resolve(this.fetchGradableItemUserOptionCount(s,{}))}getGradableItemUserOptionByMembershipId(e,t){return o.gc.gradableItemUserOption.getGradableItemUserOptionByColumnAndMembershipId(this.$ngRedux.getState(),e,t)}getGradableItemUserOptionByUserId(e,t,s){var r;const i=null===(r=o.gc.courseMembership.getCourseMembershipsByUserIds(this.$ngRedux.getState(),t,[s])[0])||void 0===r?void 0:r.id;return o.gc.gradableItemUserOption.getGradableItemUserOptionByColumnAndMembershipId(this.$ngRedux.getState(),e,i)}};u=Object(r.a)([Object(r.c)(0,Object(n.b)("$rootScope")),Object(r.c)(1,Object(n.b)("$q")),Object(r.c)(2,Object(n.b)("$ngRedux"))],u);i.module(d,[a.N]).service(c,u)},"4qUd":function(e,t){e.exports='<div bb-load-bundle="components/directives/schedule-outline" class="schedule-outline">\n\n  \x3c!-- compact representation, used on /courses --\x3e\n  <div ng-if="scheduleOutlineCollection().length !== 0">\n    \x3c!-- If there is only one schedule for this course - show it. --\x3e\n    <div ng-if="scheduleOutlineCollection().length === 1">\n      <p class="location-name" ng-if="scheduleOutlineCollection()[0].location">{{scheduleOutlineCollection()[0].getTruncatedLocation(TRUNCATION_LOCATION_COURSE_CARD)}}</p>\n      <p class="schedule">\n        <span ng-switch="scheduleOutlineCollection()[0].recurRules.freq">\n          <span ng-switch-when="WEEKLY">{{scheduleOutline.getWeeklyRepeatLabel(scheduleOutlineCollection()[0])}}</span>\n          <span ng-switch-when="MONTHLY">\n            <span bb-translate>scheduleOutline.monthlyEvent</span>\n            <span bb-translate ng-if="scheduleOutline.getNextEventDate(scheduleOutlineCollection()[0])">scheduleOutline.nextMonthlyEvent</span>\n            <span ng-if="scheduleOutline.getNextEventDate(scheduleOutlineCollection()[0] )" bb-date="scheduleOutline.getNextEventDate(scheduleOutlineCollection()[0])" format="short" auto-update="true"></span>\n          </span>\n          <span ng-switch-when="DAILY" bb-translate>scheduleOutline.dailyEvent</span>\n        </span>\n        <span ng-if="scheduleOutlineCollection()[0].isAllDayEvent()" bb-translate>scheduleOutline.allDay</span>\n        <span ng-if="!scheduleOutlineCollection()[0].isAllDayEvent()"><span bb-time="{{scheduleOutlineCollection()[0].startDate}}" auto-update="true" format="Short"></span> - <span bb-time="{{scheduleOutlineCollection()[0].endDate}}" auto-update="true" format="Short"></span></span>\n      </p>\n    </div>\n\n    \x3c!-- if there is more than one schedule for this course - just tell how many schedules available. --\x3e\n    <div ng-if="scheduleOutlineCollection().length > 1">\n      <span bb-translate translate-values="{count: scheduleOutlineCollection().length}">scheduleOutline.moreMeetingsCompact.plural</span>\n    </div>\n  </div>\n</div>\n'},"82Nl":function(e,t,s){var r=s("ziER"),i=s("5JeM"),a=new r({id:"icon-medium-location",use:"icon-medium-location-usage",viewBox:"0 0 24 24",content:'<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" id="icon-medium-location"><path d="M20 9c0 4.4183-8 14-8 14S4 13.4183 4 9s3.5817-8 8-8 8 3.5817 8 8z" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" /><circle cx="12" cy="9" r="4" stroke-width="2" /></symbol>'});i.add(a);e.exports=a},Bfy5:function(e,t,s){"use strict";s.r(t);s("h3DF"),s("zAxy"),s("KCTV");var r=s("Llzl"),i=s("LsET"),a=s("D57K"),n=s("nsO7"),o=s("d8yC"),l=s("Fvsw"),d=s("ap1t"),c=s("o5Lu"),u=s("0JpG"),m=s("pjml"),h=s("zByx"),p=s("IbyE"),b=s("IWgv"),g=s("J0Qq"),v=s("8jzW"),y=s("BnBg"),f=s("nmzr");const G="ultra.directives.grade.studentColumn";class C{constructor(e,t){this.scope=e,this.scoreProviderHelper=t,this.preventAction=!1,this.viewSref=this.getGradableItemStudentViewSref(),this.scope.gradeDetail.column.isAttendance()&&this.scope.baseGradesStudent.course.isToolAvailable("bb-attendance").then((e=>{this.preventAction=!e,this.scope.$emit("click-to-invoke-child-directive-init")}))}getGradableItemStudentViewSref(){const e=this.scope.baseGradesStudent,t=e.course,s=this.scope.gradeDetail;if(t.isUltra()&&!s.column.isCalculated()){if(s.column.isOffline())return"grade-and-feedback("+r.toJson({courseId:s.column.courseId,columnId:s.column.id,userId:e.userId})+")";const t={courseId:s.column.courseId,contentId:s.column.contentId,linkRef:s.column.linkId};return s.column.isCollectExternalSubmissions()&&(t.state=f.c.ASSESSMENT_EXTERNAL_OVERVIEW),this.scoreProviderHelper.studentViewStateRef(s.column.scoreProviderHandle,t,v.a.GenerateStateRef)}return"course.outline("+r.toJson({courseId:t.id,legacyUrl:e.getLegacyUrl()})+")"}isActionable(e){return!e.column.restricted&&this.viewSref&&!this.preventAction}}C.$inject=["scope",v.c];class S{constructor(e,t){this.$injector=e,this.$parse=t,this.scope=!0,this.restrict="E",this.template=y,this.link=(e,t,s)=>{e.studentColumn=this.$injector.instantiate(C,{scope:e}),s.displayFtue&&(e.displayFtue=this.$parse(s.displayFtue)(e)),s.previousTerm&&(e.previousTerm=this.$parse(s.previousTerm)(e))}}}S.$inject=["$injector","$parse"],r.module(G,[b.a,g.a,v.b]).directive("bbStudentColumn",["$injector",e=>e.instantiate(S)]);var T=s("TnpK"),w=s("fYJU"),I=s("O2ux"),x=s("zGdY"),D=s("2lxm"),k=s("aHpC");const O="ultra.components.directives.grade.baseGradesStudent";let A=class e{constructor(e,t,s,r,i,a,n,o){this.scope=e,this.course=t,this.context=s,this.grade=r,this.bbLocalize=i,this.ultraState=a,this.contextUser=n,this.gradableItemUserOptionService=o,this.grades=Object.create(null),this.showAllGrades=!1,this.bbLocalize.loadBundle("components/directives/grade/base-grades-student"),this.scope.membership.courseIsOpen()&&t.canAccess()&&(this.loadGrade(t,s,r,this.contextUser),this.scope.$on("bb-assessment-attempt-save",(()=>{this.loadGrade(t,s,r,this.contextUser)})))}getLegacyUrl(){return"/webapps/gradebook/do/student/viewGrades?course_id="+this.course.id+"&callback=course"}getViewAllCourseworkPeekRef(){return this.course.isUltra()?"course.grades({courseId: course.id})":"course.outline({courseId: course.id, legacyUrl: baseGradesStudent.getLegacyUrl()})"}navigateToGradePanel(){return this.course.isUltra()?"overall-grade-student({courseId: course.id, courseName: course.displayName})":"course.outline({courseId: course.id, legacyUrl: baseGradesStudent.getLegacyUrl()})"}filterOutExternalGrade(e){return n.reject(e,(e=>e.column.externalGrade))}allGradeItemsComplete(){if(this.grades.all.length){const e=this.filterOutExternalGrade(this.grades.all).length;let t=0;return this.grades.all.forEach((e=>{(e.isSubmitted()||e.isGraded())&&t++})),e===t}return!1}displayGrade(e){return x.p.NonCalculated!==e.column.calculationType||(e.isSubmitted()||e.isGraded())}getDueDateExceptions(e){const t=e[0].column.courseId,s=this.scope.membership.id,r=e.map((e=>e.column.id));return this.gradableItemUserOptionService.getGradableItemUserOptionExceptions(t,s,r,!0).then((t=>e.map((e=>(t.byColumnId[e.column.id]&&(e.column.dueDate=t.byColumnId[e.column.id].effectiveDueDate),e)))))}loadGrade(t,s,r,i){this.course.$then((()=>{this.course.schedule.$resolve(),this.userId=i.userId,r.loadColumnsAndGrades({courseId:t.id,userId:this.userId,includeExternal:!0,attachContentsByScoreProviderHandle:p.Q.Scorm}).then((t=>{var r;const i=t.filter((e=>!1!==e.column.visibleInBook));this.externalGrade=n.remove(i,(e=>e.column.externalGrade))[0];const a=null===(r=this.externalGrade)||void 0===r?void 0:r.displayGrade;void 0!==(null==a?void 0:a.score)&&(a.perfCode||a.grade||a.requiresSchemaKnowledgeToDisplay?(this.externalGrade.manualScore=o.b(this.externalGrade.displayGrade.score,2),this.externalGrade.displayGrade.score=this.externalGrade.manualScore):(this.externalGrade.manualScore=parseFloat(this.externalGrade.displayGrade.score.toFixed(2)),this.externalGrade.displayGrade.score=this.externalGrade.manualScore)),this.grades.all=i,this.totalNumberOfGradeItems=this.grades.all.length,this.hasGradeItems=!!this.grades.all.length,this.gradeItemsComplete=this.allGradeItemsComplete(),this.getDueDateExceptions(this.grades.all).then((t=>{if(this.hasGradeItems){const r=new M(t,s.getServerTime());this.grades.recent=r.getRecentGrades(),this.grades.upcoming=r.getWhatsNext(),this.grades.all=r.getAllGrades();const i=this.grades.recent.length;let a=this.grades.upcoming.length;i+a>e.MAX_DEFAULT_COLUMNS_LENGTH&&(i>e.MAX_DEFAULT_COLUMNS_LENGTH?(a>0&&(this.grades.upcoming=this.grades.upcoming.slice(0,e.MAX_UPCOMING_COLUMNS_LENGTH),a=this.grades.upcoming.length),this.grades.recent=this.grades.recent.slice(0,e.MAX_DEFAULT_COLUMNS_LENGTH-a)):this.grades.upcoming=this.grades.upcoming.slice(0,e.MAX_DEFAULT_COLUMNS_LENGTH-i))}}))}))}))}};A.MAX_DEFAULT_COLUMNS_LENGTH=5,A.MAX_UPCOMING_COLUMNS_LENGTH=2,A=Object(a.a)([Object(a.c)(0,Object(k.b)("scope")),Object(a.c)(1,Object(k.b)("course")),Object(a.c)(2,Object(k.b)(l.b)),Object(a.c)(3,Object(k.b)(c.n)),Object(a.c)(4,Object(k.b)(u.serviceName)),Object(a.c)(5,Object(k.b)(T.d)),Object(a.c)(6,Object(k.b)(w.b)),Object(a.c)(7,Object(k.b)(D.b))],A);class M{constructor(e,t){this.grades=e,this.now=t,this.recentGradeLimit=new Date,this.upcomingDateLimit=new Date,this.recentGradeLimit.setDate(this.now.getDate()-7),this.upcomingDateLimit.setDate(this.now.getDate()+7)}getAllGraded(){const e=n.sortBy(this.grades.filter((e=>e.ui.attempt&&e.isGraded())),(e=>e.ui.attempt&&e.ui.attempt.attemptLastGradedDate)),t=this.grades.filter((e=>!e.ui.attempt&&e.isGraded()));return e.concat(t)}getRecentGrades(){const e=this.grades.filter((e=>e.isSubmitted()&&e.ui.attempt&&e.ui.attempt.attemptDate&&e.ui.attempt.attemptDate>=this.recentGradeLimit&&e.ui.attempt.attemptDate<this.now||e.isGraded()&&e.manualGrade&&e.lastOverrideDate>=this.recentGradeLimit&&e.lastOverrideDate<this.now||e.ui.attempt&&e.ui.attempt.attemptLastGradedDate&&e.ui.attempt.attemptLastGradedDate>=this.recentGradeLimit&&e.ui.attempt.attemptLastGradedDate<this.now||e.isCalculatedColumnGrade&&null!=e.manualGrade));return n.sortBy(e.filter((e=>e.isGraded()||e.isCalculatedColumnGrade),(e=>e.ui.attempt&&e.ui.attempt.attemptLastGradedDate)))}getWhatsNext(){return n.sortBy(this.grades.filter((e=>!e.isGraded()&&!e.isSubmitted()&&e.column.dueDate&&e.column.dueDate>=this.now&&e.column.dueDate<=this.upcomingDateLimit)),(e=>e.column.dueDate))}getAllGrades(){const e=n.sortBy(this.grades.filter((e=>e.isMissing())),(e=>e.column.dueDate)),t=n.sortBy(this.grades.filter((e=>e.isSubmitted())),(e=>e.ui.attempt?e.ui.attempt.attemptLastGradedDate:null)),s=n.sortBy(this.grades.filter((e=>!e.isGraded()&&!e.isSubmitted()&&!e.column.dueDate)),(e=>e.column.columnName)),r=n.sortBy(this.grades.filter((t=>t.isUpcoming()&&t.column.dueDate&&!n.includes(e,t))),(e=>e.column.dueDate));return e.concat(t,this.getAllGraded(),r,s)}}class E{constructor(e){this.$injector=e,this.restrict="E",this.template=I,this.scope={course:"=",courseColorClass:"=",displayFtue:"=",membership:"=",previousTerm:"="},this.link=e=>{e.baseGradesStudent=this.$injector.instantiate(A,{course:e.course,scope:e})}}}E.$inject=["$injector"],r.module(O,[l.a,d.a,c.m,u.moduleName,m.N,h.a,G,T.b,D.a]).directive("bbBaseGradesStudent",["$injector",e=>e.instantiate(E)]);var $=s("fzAu"),N=s("zEHu"),j=s("lr7J"),U=s("HdfQ"),L=s("r6lH"),R=s("BjFu"),P=s("lEL+"),B=s("4HBD"),F=s("CHTf");s.d(t,"moduleName",(function(){return V})),s.d(t,"controllerName",(function(){return z})),s.d(t,"template",(function(){return F}));const V="ultra.base.grades",z=i.b;r.module(V,[O,$.a,N.a,j.b,U.a,L.a,R.b,P.a,T.b,B.a]).controller(i.b,i.a)},BjFu:function(e,t,s){"use strict";s.d(t,"b",(function(){return v})),s.d(t,"c",(function(){return y})),s.d(t,"a",(function(){return f}));var r=s("D57K"),i=s("nsO7"),a=s("Llzl"),n=s("yC9S"),o=s("Fvsw"),l=s("go4a"),d=s("pjml"),c=s("zdqs"),u=s("SoDU"),m=s("fYJU"),h=s("VdDF"),p=s("aHpC"),b=s("zGdY"),g=s("KiLF");const v="ultra.service.termMembership",y="termMembership";function f(e,t=new Date){let s=e.startDate,r=e.endDate;return b.x.UseTerm===e.durationType&&e.term&&(s=e.term.startDate,r=e.term.endDate),h.a.isWithinDateRange(t,{start:s,end:r})}let G=class{constructor(e,t,s,r,i,a,o,l,d){this.$q=e,this.context=s,this.CourseModel=r,this.CourseMembershipModel=i,this.TermModel=a,this.UserModel=o,this.ExternalCourseModel=l,this.contextUser=d,n.b.OnRootScope(t,"courseUltraStatusChanged",((e,t,s)=>{this.updateCourseUltraStatus(t,s)}))}clear(){this.termsAndMemberships=void 0,this.loadPromise=void 0}getTermsAndMemberships(){return this.loadPromise?this.loadPromise:this.reloadTermsAndMemberships()}filterMemberships(e,t,s,r){return e&&Array.isArray(e)?e.filter((e=>(!e.course.isOrganization===t||!!e.course.isOrganization===s)&&(!r||r(e)))):[]}getCourseMembershipsFromArray(e,t){return this.filterMemberships(e,!0,!1,t)}getOrganizationMembershipsFromArray(e,t){return this.filterMemberships(e,!1,!0,t)}parseMembershipFromExternalCourse(e){const t=this.CourseMembershipModel.$new();return t.course=this.CourseModel.$new(),t.course.id=e.id,t.course.name=e.title,t.course.description=e.description,t.course.displayName=e.title,t.course.startDate=e.startDate,t.course.endDate=e.endDate,t.course.isAvailable=!0,t.course.durationType=b.x.DateRange,t.userId=e.userId,t.isAvailable=!0,t.userHasHidden=e.isHidden,t.courseCardColorIndex=parseInt((e.id||"0").replace(/_1$/,"").replace(/[^\d]/g,""),10),t.course.ui={courseColorClass:l.a(t),isExternal:!0,description:e.description,externalUrl:e.url},t}parseExternalCourseFromMembership(e){const t=this.ExternalCourseModel.$new(e.course.id);return t.id=e.course.id,t.title=e.course.name,t.startDate=e.course.startDate,t.endDate=e.course.endDate,t.userId=e.userId,t.description=e.course.ui.description,t.url=e.course.ui.externalUrl,t.isHidden=e.userHasHidden,t}reloadTermsAndMemberships(){const e=this.$q.defer();this.loadPromise=e.promise,this.termsAndMemberships={terms:[],termsByTermId:{},memberships:[],membershipsByTermId:{}};const t=this.context.getServerTime();return this.$q.all([this.getInternalMembership(),this.getExternalCoursesMembership(),this.updateTermsAndMemberships()]).then((([s,r])=>{this.termsAndMemberships.membershipsByTermId=Object.create(null),this.termsAndMemberships.memberships.splice(0,this.termsAndMemberships.memberships.length),(s=s.filter(((e,t,s)=>s.findIndex((t=>e.$pk===t.$pk))===t))).forEach((e=>{this.termsAndMemberships.memberships.push(e)})),r.forEach((e=>{this.termsAndMemberships.memberships.push(e)})),this.associateTermsWithCourses();const a=new u.a(this.TermModel,this.termsAndMemberships.terms);let n=new c.a(a).map(this.termsAndMemberships.memberships,t);n=this.applyStudentAvailabilityRules(n),n.forEach((e=>{const t=t=>{let s=this.termsAndMemberships.membershipsByTermId[t.id];s||(s=this.termsAndMemberships.membershipsByTermId[t.id]={memberships:[]}),s.memberships.push(e.membership)};t(e.term);const s=e.membership.course.term;!s||e.term!==a.currentTerm&&e.term!==a.upcomingTerm||t(s),this.buildTermRelationships(e)})),Object.keys(this.termsAndMemberships.membershipsByTermId).forEach((e=>{const t=this.termsAndMemberships.membershipsByTermId[e];t.memberships=i.sortBy(t.memberships,(e=>e.course.name))})),e.resolve(this.termsAndMemberships)})),this.loadPromise}getInternalMembership(){return this.contextUser.getMemberships().then((e=>(e.forEach((e=>{e.course&&(e.course.term&&(e.course.term.id=e.course.term.$pk),e.course.ui={courseColorClass:l.a(e)})})),this.getActiveMemberships(e))))}getActiveMemberships(e){return e.filter((e=>e.course&&e.isAvailable))}getExternalCoursesMembership(){return this.ExternalCourseModel.$search({limit:1e4}).$asPromise().then((e=>e.map((e=>this.parseMembershipFromExternalCourse(e)))))}updateTermsAndMemberships(){return this.TermModel.$search().$asPromise().then((e=>{this.termsAndMemberships.terms=i.orderBy(e,["startDate","durationType"],["asc","desc"]);const t=u.a.decorateTerm(new this.TermModel,d.Gb.ConstantTermId.CurrentTerm),s=u.a.decorateTerm(new this.TermModel,d.Gb.ConstantTermId.UpcomingTerm);this.termsAndMemberships.terms.push(t,s)}))}associateTermsWithCourses(){this.termsAndMemberships.memberships.forEach((e=>{e.course.term&&(e.course.term=this.termsAndMemberships.terms.find((t=>t.id===e.course.term.id)))}))}buildTermRelationships(e){const t=this.termsAndMemberships.termsByTermId[e.term.id];if(e.membership.course.term){if(e.term.id!==e.membership.course.term.id){if(!t)return void(this.termsAndMemberships.termsByTermId[e.term.id]=[e.membership.course.term]);t.indexOf(e.membership.course.term)<0&&t.push(e.membership.course.term)}}else;this.termsAndMemberships.termsByTermId[e.term.id]=i.orderBy(t,["startDate","name"],["desc","asc"])}applyStudentAvailabilityRules(e){return e.filter((e=>(e.membership.isStudentOrGuestMembership()&&e.membership.course.isUndecided()&&(e.membership.course.isAvailable=!1),!0)))}getCourseMembership(e){const t=this.findCourseMembership(e,this.termsAndMemberships.memberships);if(-1!==t)return this.termsAndMemberships.memberships[t]}findCourseMembership(e,t){return t.findIndex((t=>t.course.id===e))}updateCourseUltraStatus(e,t){let s=this.findCourseMembership(e,this.termsAndMemberships.memberships);-1!==s&&(this.termsAndMemberships.memberships[s].course.ultraStatus=t),Object.keys(this.termsAndMemberships.membershipsByTermId).forEach((r=>{s=this.findCourseMembership(e,this.termsAndMemberships.membershipsByTermId[r].memberships),-1!==s&&(this.termsAndMemberships.membershipsByTermId[r].memberships[s].course.ultraStatus=t)}))}filterAssociatedWithTermCourseMembershipsByTerm(e,t){return this.filterAssociatedWithTermCourseMemberships(e).filter((e=>e.course.term.id===t.id))}filterAssociatedWithTermCourseMemberships(e){return e.filter((e=>e.course.term&&!g.a.Continuous.isEqualTo(e.course.term.durationType)))}filterAssortedDatesCourseMemberships(e){return e.filter((e=>null==e.course.term||e.course.term&&g.a.Continuous.isEqualTo(e.course.term.durationType)))}};G=Object(r.a)([Object(r.c)(0,Object(p.b)("$q")),Object(r.c)(1,Object(p.b)("$rootScope")),Object(r.c)(2,Object(p.b)(o.b)),Object(r.c)(3,Object(p.b)(d.m.serviceName)),Object(r.c)(4,Object(p.b)(d.t.serviceName)),Object(r.c)(5,Object(p.b)(d.Gb.serviceName)),Object(r.c)(6,Object(p.b)(d.Jb.serviceName)),Object(r.c)(7,Object(p.b)(d.z.serviceName)),Object(r.c)(8,Object(p.b)(m.b))],G);a.module(v,[o.a,d.N]).service(y,G)},BnBg:function(e,t){e.exports='<div class="row tabular-row js-row element-list-row"\n     ng-class="{\'is-restricted-without-slash restricted-for-students\': gradeDetail.column.restricted}"\n     bb-click-to-invoke-child="a.bb-click-target">\n  <div class="columns">\n    <div ng-class="{\'has-ellipse\': !graderColumn.isCourseView}">\n      <div class="element-card">\n        <div bb-content-item-icon content-column="gradeDetail.column" show-alert-icon="gradeDetail.isMissing()" class="element-image"></div>\n        <div class="element-details">\n          <span class="js-gradable-item-link name ellipse">\n            <a class="bb-click-target"\n               ng-if="studentColumn.isActionable(gradeDetail) && !previousTerm"\n               bb-peek-sref="{{studentColumn.viewSref}}"\n               bb-translate bb-key-hide-ftue="base.grades.student.column.item.detail"\n               tabindex="0"\n               analytics-id="{{gradeDetail.column.localizedColumnName.languageKey}}" >\n              {{gradeDetail.column.localizedColumnName.languageKey}}\n            </a>\n            <span ng-if="!studentColumn.isActionable(gradeDetail) || previousTerm"\n               bb-key-hide-ftue="base.grades.student.column.item.detail">\n              <span bb-translate>\n                {{gradeDetail.column.localizedColumnName.languageKey}}\n              </span>\n              <span bb-translate>\n                components.directives.grade.base-grades-student.disabledContent\n              </span>\n            </span>\n          </span>\n          <span class="secondary-text" ng-show="gradeDetail.ui.attempt.isSubmitted() && !gradeDetail.column.isAttendance()">\n            <span bb-translate>components.directives.grade.base-grades-student.column.submitted</span>\n            <bb-date format="Short">gradeDetail.ui.attempt.attemptDate</bb-date>\n          </span>\n        </div>\n      </div>\n    </div>\n  </div>\n  \x3c!-- FTUE guidance moment --\x3e\n  <div ng-if="displayFtue" aria-describedby="guidance-moment-grade-detail">\n    \x3c!-- set keep-guidance-when-focusout to be true then add bb-key-hide-ftue="base.grades.student.column.item.detail" on the a that has class "bb-click-target" --\x3e\n    <bb-guidance id="guidance-moment-grade-detail" ng-if="displayFtue" component-key="base.grades.student.column.item.detail" class="guidance-element-overlay base-student-ftue" role="tooltip">\n      <bb-translate>components.directives.grade.base-grades-student.ftue.itemDetail</bb-translate>\n    </bb-guidance>\n  </div>\n  <div class="columns grade-status text-right">\n    \x3c!--Due date--\x3e\n    <span class="secondary-text date right" ng-class="{late: gradeDetail.isMissing()}" ng-if="!gradeDetail.isSubmitted() && !gradeDetail.isGraded()">\n      <span bb-translate ng-if="gradeDetail.column.dueDate">components.directives.grade.base-grades-student.column.due</span>\n      <bb-date format="Short">gradeDetail.column.dueDate</bb-date>\n    </span>\n      \x3c!--Grading status--\x3e\n    <span class="right" ng-if="::baseGradesStudent.displayGrade(gradeDetail)">\n      <bb-display-grade-pill ng-if="gradeDetail.isGraded() || gradeDetail.column.isCalculated()" grade="gradeDetail" column="gradeDetail.column" cursor="default"></bb-display-grade-pill>\n    </span>\n  </div>\n</div>\n'},CHTf:function(e,t){e.exports='<div bb-first-time-container bb-cache-compilation="base-grades" bb-offcanvas-pausal-scope>\n  <bb-base-header page-title-key="base.grades.pageTitle"></bb-base-header>\n\n  <div id="body-content" class="base-grades-wrapper">\n    <div ng-style="{ visibility: baseGrades.termCarouselReady ? \'\' : \'hidden\' }" class="base-grades" bb-foundation>\n      <div class="guidance-wrapper">\n        <button bb-guidance-target component-key="base.grades.ftue.term"\n                class="semester-nav-button prev button button--icon super-clear icon-arrow-left" tabindex="-1"\n                bb-translate-attrs="{\'aria-label\': \'base.grades.previousTerm\', \'title\': \'base.grades.previousTerm\'}" aria-describedby="guidance-moment-grade-term"\n                analytics-id="base.grades.previousTerm.button"></button>\n        <bb-guidance id="guidance-moment-grade-term" ng-if="baseGrades.hasPreviousMemberships" component-key="base.grades.ftue.term" class="guidance-moment-base-grades guidance-element-overlay stacked" role="tooltip">\n          <bb-translate>base.grades.ftue.term</bb-translate>\n        </bb-guidance>\n      </div>\n\n      <button class="semester-nav-button next button button--icon super-clear icon-arrow-right" tabindex="-1"\n              bb-translate-attrs="{\'aria-label\': \'base.grades.nextTerm\', \'title\': \'base.grades.nextTerm\'}"\n              analytics-id="base.grades.nextTerm.button"></button>\n\n      <div class="slick-header"></div>\n\n      <div bb-slick manual-init="true" infinite="false" slick-handle="baseGrades.termCarousel" initial-slide="baseGrades.initialIndex"\n           slides-to-show="1" prev-arrow=".base-grades .prev" next-arrow=".base-grades .next" accessibility="false"\n           hide-off-screen-slides="true">\n\n        \x3c!--Terms--\x3e\n        <div ng-repeat="term in baseGrades.termsToDisplay track by $index"\n             id="container-term-{{term.id}}"\n             data-term-id="{{term.id}}">\n          <div class="grades-list" ng-class="{\'current-term\': term.id === baseGrades.currentTerm.id}"\n               ng-init="firstSlideCreated($index)"\n               bb-infinite-scroll="baseGrades.loadMoreCoursesIntoView(term.id)"\n               infinite-scroll-container="\'#main-content-inner\'"\n               infinite-scroll-disabled="term.id !== baseGrades.currentTermInView || baseGrades.coursesNoMore[term.id] === true"\n               infinite-scroll-immediate-check="term.id !== baseGrades.currentTermInView"\n               infinite-scroll-current-count="baseGrades.getCoursesByTerm(term.id).length"\n               infinite-scroll-total-count="baseGrades.studentMemberships[term.id].length + baseGrades.graderMemberships[term.id].length"\n               infinite-scroll-load-limit="baseGrades.coursesPrLoad"\n               infinite-scroll-tray-id="base-grades-{{::term.id}}"\n               infinite-scroll-focusable-children-selector=".element-card .grades-header a"\n               infinite-scroll-localization-keys-prefix="base.grades.infiniteScroll"\n               infinite-scroll-localization-values="{term: term.name || term.id}">\n\n            <h2 class="semester active-term wide-slide" id="grades-list-term-{{term.id}}">\n              <ng-switch on="term.ui.type">\n                <span ng-switch-when="current" bb-translate-attrs="{\'title\': \'base.grades.term.current\'}" bb-translate>base.grades.term.current</span>\n                <span ng-switch-when="upcoming" bb-translate-attrs="{\'title\': \'base.grades.term.upcoming\'}" bb-translate>base.grades.term.upcoming</span>\n                <span ng-switch-when="year" bb-translate-attrs="{\'title\': \'base.grades.term.year\'}" translate-attrs-values="{year: term.ui.year}"\n                      bb-translate translate-values="{ year: term.ui.year }">base.grades.term.year</span>\n                <span ng-switch-default title="{{term.name}}">{{term.name}}</span>\n              </ng-switch>\n            </h2>\n            <div class="base-grades-term-wrapper">\n\n              <div ng-repeat="membership in baseGrades.getCoursesByTerm(term.id) track by (membership.id + membership.course.id)">\n                <div ng-if="!membership.isStudentMembership()">\n                  <bb-base-grades-grader\n                    id="card_{{membership.course.id}}"\n                    course="membership.course"  bb-course-entitlement="course.gradebook-metadata.VIEW"\n                    course-id="membership.course.id" course-color-class="membership.getCourseColorClass()"\n                    has-telemetry-data="baseGrades.hasTelemetryData(membership)"\n                    previous-term="baseGrades.isPreviousTerm(term.id)">\n                  </bb-base-grades-grader>\n                </div>\n                <div ng-if="membership.isStudentMembership()">\n                  <bb-base-grades-student\n                    id="card_{{membership.course.id}}"\n                    bb-course-entitlement="course.gradebook-metadata.VIEW"\n                    course="membership.course"\n                    course-color-class="membership.getCourseColorClass()"\n                    course-id="membership.course.id"\n                    display-ftue="$first"\n                    entitlement-action="hide"\n                    has-telemetry-data="baseGrades.hasTelemetryData(membership)"\n                    membership="membership"\n                    previous-term="membership.courseIsPrivate() && baseGrades.isPreviousTerm(term.id)">\n                  </bb-base-grades-student>\n                </div>\n              </div>\n\n              \x3c!--Not Enrolled Message Current Term--\x3e\n              <div ng-if="!baseGrades.termHasCourses(term) && term.id === baseGrades.currentTerm.id"\n                   class="empty not-enrolled is-empty-page">\n                <div class="is-empty-wrapper">\n                  <div class="is-empty-explanation">\n                    <img src="./static/images/ftue/zero-state-gradebook.svg" alt="">\n                    <h1 bb-translate class="is-empty-heading">base.grades.noCourse</h1>\n                    <p bb-translate>base.grades.checkLater</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n              \x3c!--upcoming courses should eventually be listed here. they are currently hidden from all users in base grades (LRN-89565)--\x3e\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div ui-view></div>\n  <div class="spinner bb-secondary-color-2 relatively-centered" ng-if="baseGrades.isLoading" role="status">\n    <span class="sr-only" bb-translate>base.courses.loadingCourses</span>\n  </div>\n</div>\n'},HdfQ:function(e,t,s){"use strict";s("i1PZ"),s("ja1T");var r=s("71td"),i=s("Llzl"),a=s("7/CN"),n=s("H8CZ"),o=s("lEL+"),l=s("0JpG"),d=s("nsO7"),c=s("yC9S");s.d(t,"a",(function(){return u}));const u="bbSlick";class m{constructor(e,t){this.timeout=e,this.localize=t,this.restrict="AE",this.scope={initOnload:"@",data:"=",currentIndex:"=?",accessibility:"@",arrows:"@",asNavFor:"@",autoplay:"@",autoplaySpeed:"@",centerMode:"@",centerPadding:"@",cssEase:"@",dots:"@",draggable:"@",easing:"@",fade:"@",focusOnSelect:"@",disableOffScreenSlides:"&?",hideOffScreenSlides:"&?",infinite:"@",init:"&",initialSlide:"=?",lazyLoad:"@",manualInit:"=",nextArrow:"@",onBeforeChange:"&?",onAfterChange:"&?",onInit:"&?",onReInit:"&?",onUpdate:"&",pauseOnHover:"@",prevArrow:"@",responsive:"=",slickHandle:"=",slide:"@",slidesToShow:"=?",slidesToScroll:"@",speed:"@",swipe:"@",touchMove:"@",touchThreshold:"@",toUpdateSlide:"=",vertical:"@",useCss:"@"},this.link=(e,t,s)=>{let i=!1,o=!1;const l=r(t),u=this.localize;e.$on("slickRefresh",(()=>{l.slick("unslick"),l.init=b()})),e.$on("$destroy",(()=>{o&&this.timeout((()=>{l.slick("unslick")}),e,500)}));const m=r(e.prevArrow),h=r(e.nextArrow);function p(e){e.slideCount<=e.options.slidesToShow&&(e.slideCount-1===e.currentSlide&&h.addClass("slick-disabled"),0===e.currentSlide&&m.addClass("slick-disabled")),m.hasClass("slick-disabled")?m.attr("disabled","disabled"):m.removeAttr("disabled"),h.hasClass("slick-disabled")?h.attr("disabled","disabled"):h.removeAttr("disabled")}function b(){t.on("beforeChange",(function(s,r,i,n){e.onBeforeChange&&(e.onBeforeChange({$event:s,$sl:r,$oldIndex:i,$newIndex:n}),e.$apply()),e.hideOffScreenSlides&&e.hideOffScreenSlides()?t.find(".slick-slide").children().show():e.disableOffScreenSlides&&e.disableOffScreenSlides()&&a.i(t.find(".slick-slide"))})),t.on("afterChange",(function(s,r,i){p(r),e.onAfterChange&&e.onAfterChange({$event:s,$sl:r,$newIndex:i});const n=t.find(".slick-slide");if(n.removeAttr("aria-hidden"),e.hideOffScreenSlides&&e.hideOffScreenSlides()?n.not(".slick-active, .slick-current").children().hide():e.disableOffScreenSlides&&e.disableOffScreenSlides()&&a.f(n.not(".slick-active, .slick-current")),!e.$$phase&&!e.$root.$$phase)return e.$apply((function(){return e.currentIndex=i}));e.currentIndex=i})),t.on("init",(function(s,i){e.onInit&&e.onInit(),p(i);const n=t.find(".slick-slide");if(n.removeAttr("aria-hidden"),e.hideOffScreenSlides&&e.hideOffScreenSlides()?n.not(".slick-active, .slick-current").children().hide():e.disableOffScreenSlides&&e.disableOffScreenSlides()&&a.f(n.not(".slick-active, .slick-current")),r(window).trigger("resize"),o=!0,e.toUpdateSlide)return e.toUpdateSlide=!1,i.slideHandler(e.currentIndex,!1,!0)})),e.onReInit&&t.on("reInit",(function(t,s){e.onReInit()})),l.slick({accessibility:"false"!==e.accessibility,arrows:"false"!==e.arrows,asNavFor:e.asNavFor,autoplay:"true"===e.autoplay,autoplaySpeed:null!=e.autoplaySpeed?parseInt(e.autoplaySpeed,10):3e3,centerMode:"true"===e.centerMode,centerPadding:e.centerPadding||"50px",cssEase:e.cssEase||"ease",dots:"true"===e.dots,draggable:"true"===e.draggable,easing:e.easing||"linear",fade:"true"===e.fade,focusOnSelect:"true"===e.focusOnSelect,infinite:"false"!==e.infinite,initialSlide:null!=e.initialSlide?parseInt(e.initialSlide,10):0,lazyLoad:e.lazyLoad||"ondemand",nextArrow:r(e.nextArrow),pauseOnHover:"false"!==e.pauseOnHover,prevArrow:r(e.prevArrow),responsive:e.responsive,rtl:u.isRTL(e),slide:e.slide||"div",slidesToShow:e.slidesToShow,slidesToScroll:null!=e.slidesToScroll?parseInt(e.slidesToScroll,10):1,speed:null!=e.speed?parseInt(e.speed,10):300,swipe:"false"!==e.swipe,touchMove:"false"!==e.touchMove,touchThreshold:e.touchThreshold?parseInt(e.touchThreshold,10):5,useCSS:"false"!==e.useCss,vertical:"true"===e.vertical}),t.find(".slick-list").removeAttr("aria-live");c.b.OnWindow("resize",(()=>{l.get(0).slick&&r(window).width()===l.get(0).slick.windowWidth&&l.get(0).slick.setPosition()}),e)}const g=()=>{l.get(0).slick&&l.get(0).slick.reinit(),l.slick("unslick"),l.find(".slick-list").remove(),e.onUpdate(),this.timeout((()=>{b(),e.$emit("update-slick-refresh")}),e,0,!1)};if(e.slickHandle&&(e.slickHandle=l),e.manualInit)l.init=b,l.refresh=g;else{if(!e.initOnload)return b();i=!1,e.$watch("data",((e,t)=>{null!=e&&(i?g():(b(),i=!0))}))}c.b.OnWindow("bb-offcanvas-breakpoint-large bb-offcanvas-breakpoint-medium bb-offcanvas-breakpoint-small",(()=>{n.b(r(window),(e=>{var t;const s=e.target,r=Object(d.isString)(null==s?void 0:s.className)?null==s?void 0:s.className:(null===(t=null==s?void 0:s.classList)||void 0===t?void 0:t.value)||"";if(!e.data.noTransitions&&-1===r.indexOf("bb-offcanvas-panel"))return!1;l.get(0).slick&&l.get(0).slick.setPosition()}))}),e)}}}m.$inject=[o.b,l.serviceName],i.module(u,[o.a]).directive("bbSlick",["$injector",e=>e.instantiate(m)])},LsET:function(e,t,s){"use strict";(function(e){s.d(t,"b",(function(){return u})),s.d(t,"a",(function(){return p}));var r=s("nsO7"),i=s("Fvsw"),a=s("lr7J"),n=s("pjml"),o=s("BjFu"),l=s("SoDU"),d=s("lEL+"),c=s("zGdY");const u="ultra.base.grades.controller";class m{constructor(e,t,s,i,a,n){this.$scope=e,this.$q=t,this.context=s,this.timeout=n,this.courses=[],this.graderMemberships={},this.studentMemberships={},this.hasPreviousMemberships=!1,this.upcomingMemberships=[],this.initialIndex=0,this.termCarouselReady=!1,this.termCarousel=Object.create(null),this.coursesInView={},this.coursesNoMore={},this.coursesPrLoad=6,this.isLoading=!0,e.baseGrades=this,this.isLoading=!0;const o=i.getTermsAndMemberships().then((e=>{const t=function(e){return!e.course.ui.isExternal};this.termsAndMemberships={terms:e.terms,memberships:r.filter(e.memberships,t),membershipsByTermId:function(){const s={};return r.each(e.membershipsByTermId,((e,i)=>{s[i]={memberships:r.filter(e.memberships,t)}})),s}()};const s=new l.a(a,this.termsAndMemberships.terms);this.currentTerm=s.currentTerm,this.upcomingTerm=s.upcomingTerm,this.orderMemberships(),this.studentMemberships[this.currentTerm.id]&&(this.studentMemberships[this.currentTerm.id]=this.studentMemberships[this.currentTerm.id].filter((e=>!e.courseIsPrivate()))),this.termsToDisplay=this.termsAndMemberships.terms.filter((e=>e.id===this.currentTerm.id||this.termHasCourses(e)&&e.id!==this.upcomingTerm.id)),this.initialIndex=this.termsToDisplay.indexOf(this.currentTerm)})),d=t.defer();e.firstSlideCreated=r.once((()=>{d.resolve()})),t.all([o,d.promise]).then((()=>{this.setupTermCarousel(),this.isLoading=!1}))}termHasCourses(e){const t=this.termsAndMemberships.membershipsByTermId[e.id];return t&&t.memberships&&t.memberships.length>0}isPreviousTerm(e){return n.Gb.ConstantTermId.CurrentTerm!==e&&n.Gb.ConstantTermId.UpcomingTerm!==e}orderMemberships(){this.termsAndMemberships.terms.forEach((e=>{const t=this.termsAndMemberships.membershipsByTermId[e.id];if(t){const s=new h(t.memberships);this.graderMemberships[e.id]=s.teachingMemberships.concat(s.supportingMemberships),this.studentMemberships[e.id]=s.takingMemberships,this.isPreviousTerm(e.id)&&(this.hasPreviousMemberships=!0),this.coursesInView[e.id]=this.coursesPrLoad}}))}get currentTermInView(){return e("#body-content .slick-slide.slick-current").attr("data-term-id")}getCoursesByTerm(e){let t=r.take(this.graderMemberships[e]||[],this.coursesInView[e]||0);return this.coursesInView[e]-t.length>0&&(t=t.concat(r.take(this.studentMemberships[e],this.coursesInView[e]-t.length))),t.length<this.coursesInView[e]&&(this.coursesInView[e]=t.length,this.coursesNoMore[e]=!0),t}loadMoreCoursesIntoView(e){if(this.currentTermInView===e&&!0!==this.coursesNoMore[e]){const t=this.$q.defer();this.$scope.$root.$broadcast(a.a,"base-grades-"+e,t.promise),this.timeout((()=>{this.coursesInView[e]+=this.coursesPrLoad,t.resolve(),this.$scope.$digest()}),this.$scope,0)}}orderUpcomingMemberships(){if(this.termsAndMemberships.membershipsByTermId[this.upcomingTerm.id]){const e=new h(this.termsAndMemberships.membershipsByTermId[this.upcomingTerm.id].memberships,(e=>!e.isStudentMembership()));this.upcomingMemberships=e.teachingMemberships.concat(e.supportingMemberships)}}setupTermCarousel(){this.termCarousel.init(),this.termCarouselReady=!0}}m.$inject=["$scope","$q",i.b,o.c,n.Gb.serviceName,d.b];class h{constructor(e,t){this.teachingMemberships=[],this.supportingMemberships=[],this.takingMemberships=[],this.visitingMemberships=[],e.forEach((e=>{t?t(e)&&this.pushMembershipsByCourseRole(e):this.pushMembershipsByCourseRole(e)})),this.teachingMemberships=r.sortBy(this.teachingMemberships,(e=>e.course.name)),this.takingMemberships=r.sortBy(this.takingMemberships,(e=>e.course.name)),this.supportingMemberships=r.sortBy(this.supportingMemberships,(e=>e.course.name)),this.visitingMemberships=r.sortBy(this.visitingMemberships,(e=>e.course.name))}pushMembershipsByCourseRole(e){e.courseRole.roleBucket===c.y.Teaching?this.teachingMemberships.push(e):e.courseRole.roleBucket===c.y.Taking?this.takingMemberships.push(e):e.courseRole.roleBucket===c.y.Visiting?this.visitingMemberships.push(e):this.supportingMemberships.push(e)}}class p extends m{}}).call(this,s("71td"))},O2ux:function(e,t){e.exports='<div class="element-card tile {{courseColorClass}} base-grades-course-tile" ng-class="{\'base-grades-only-card\': ($parent.$last && $parent.$first), \'active-course\': !previousTerm}">\n  <div class="element-details clearfix">\n    <div class="row grades-header">\n      <div class="columns small-8"  bb-click-to-invoke-child="a.bb-click-target">\n        <span class="course-number">{{course.displayId}}</span>\n\n        <h3 class="subheader">\n          <span ng-if="::previousTerm" title="{{course.displayName}}">{{course.displayName}}</span>\n          <a class="bb-click-target" bb-peek-sref="course.grades({courseId: course.id})"\n             ng-if="::course.isUltra() && !previousTerm" title="{{course.displayName}}"\n             analytics-id="components.directives.grades.studentGrades.ultraCourse.name.link" >{{course.displayName}}</a>\n          <a class="bb-click-target" bb-peek-sref="course.outline({courseId: course.id, legacyUrl: baseGradesStudent.getLegacyUrl()})"\n             ng-if="::!course.isUltra() && !previousTerm" title="{{course.displayName}}"\n             analytics-id="components.directives.grades.studentGrades.legacyCourse.name.link">{{course.displayName}}</a>\n        </h3>\n        <bb-schedule-outline class="schedule" schedule-outline-collection="course.schedule"></bb-schedule-outline>\n      </div>\n      <div class="columns small-4 current-grade overall-grade-ftue-target">\n        <bb-telemetry-link ng-if="::course.canAccess()" course-id="course.id" context-type="\'baseGrades\'"></bb-telemetry-link>\n        \x3c!--Current Grade--\x3e\n        <div bb-guidance-target component-key="{{\'components.directives.grade.base-grades-student.grade.ftue\'+ course.id}}">\n          <a bb-peek-sref="::baseGradesStudent.navigateToGradePanel()"\n             bb-translate-attrs="{title: \'components.directives.grade.base-grades-student.grade.current\'}"\n             ng-if="!!baseGradesStudent.externalGrade"\n             class="no-underline"\n             analytics-id="components.directives.grades.studentGrades.grade.link">\n            <bb-display-grade-pill grade="baseGradesStudent.externalGrade"\n                                   column="baseGradesStudent.externalGrade.column"></bb-display-grade-pill>\n          </a>\n          <bb-guidance ng-if="!!baseGradesStudent.externalGrade && displayFtue"\n                       alwaysShow="true" component-key="{{\'components.directives.grade.base-grades-student.grade.ftue\'+ course.id}}"\n                       class="guidance-element-overlay push-right overall-grade-ftue">\n            <span bb-translate>components.directives.grade.base-grades-student.grade.ftue</span>\n          </bb-guidance>\n        </div>\n      </div>\n    </div>\n\n    \x3c!--empty state when nothing has been graded or even assigned--\x3e\n    <div class="row" ng-if="!baseGradesStudent.hasGradeItems">\n      <div class="columns small-12 base-grades-empty-element">\n        <div class="no-grades base-grades-empty-state text-center">\n          <p class="main" bb-translate>\n            components.directives.grade.base-grades-student.emptyTextHeader\n          </p>\n        </div>\n      </div>\n    </div>\n\n    <div ng-if="baseGradesStudent.hasGradeItems">\n      <div class="recent-upcoming" ng-hide="baseGradesStudent.showAllGrades">\n        \x3c!--Student Recent Grades--\x3e\n        <h4 class="section-title" ng-if="baseGradesStudent.grades.recent.length" bb-translate>components.directives.grade.base-grades-student.grade.recent</h4>\n\n        <bb-student-column ng-class="{\'last-tabular-row-container\':$last}"\n                           ng-repeat="gradeDetail in baseGradesStudent.grades.recent"\n                           display-ftue="{{$first && displayFtue}}" previous-term="{{previousTerm}}"></bb-student-column>\n\n        \x3c!--Recent Empty Text--\x3e\n        <div class="row" ng-if="!baseGradesStudent.grades.recent.length">\n          <div class="columns small-12 base-grades-empty-element">\n            <div class="base-grades-empty-state text-center">\n              <p class="main" bb-translate>\n                components.directives.grade.base-grades-student.grade.recentEmptyHeader</p>\n            </div>\n          </div>\n        </div>\n\n        \x3c!--Whats Next--\x3e\n        <h4 class="section-title" ng-if="baseGradesStudent.grades.upcoming.length" bb-translate>components.directives.grade.base-grades-student.grade.upcoming</h4>\n\n        <bb-student-column ng-class="{\'last-tabular-row-container\':$last}"\n                           ng-repeat="gradeDetail in baseGradesStudent.grades.upcoming"\n                           display-ftue="{{displayFtue && $first}}" previous-term="{{previousTerm}}"></bb-student-column>\n      </div>\n\n      \x3c!--All Grades--\x3e\n      <div class="all-grades" ng-if="baseGradesStudent.showAllGrades">\n        <bb-student-column ng-class="{\'last-tabular-row-container\':$last}"\n                           ng-repeat="gradeDetail in baseGradesStudent.grades.all"\n                           display-ftue="{{displayFtue && $first}}" previous-term="{{previousTerm}}"></bb-student-column>\n      </div>\n\n      <div class="row">\n        <div class="columns small-12 grades-toggle-wrapper">\n          \x3c!--View all link--\x3e\n          <a ng-if="!previousTerm"\n             bb-peek-sref="::baseGradesStudent.getViewAllCourseworkPeekRef()"\n             class="grades-toggle right"\n             aria-expanded="{{!baseGradesStudent.showAllGrades ? false : true}}"\n             bb-translate-attrs="{\'aria-label\': \'components.directives.grade.base-grades-student.aria-label.viewAll\'}"\n             translate-attrs-values="{courseName: course.displayName, count: baseGradesStudent.totalNumberOfGradeItems}"\n             analytics-id="components.directives.grades.studentGrades.viewAll.link">\n            \x3c!--View all coursework--\x3e\n            <span ng-hide="baseGradesStudent.showAllGrades" bb-translate\n                  translate-values="{ count: baseGradesStudent.totalNumberOfGradeItems }">\n                components.directives.grade.base-grades-student.viewAll\n            </span>\n            \x3c!--Hide--\x3e\n            <span ng-show="baseGradesStudent.showAllGrades" bb-translate>components.directives.grade.base-grades-student.hide</span>\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n'},SoDU:function(e,t,s){"use strict";s.d(t,"a",(function(){return a}));var r=s("VdDF"),i=s("pjml");class a{constructor(e,t){this.TermModel=e,this.terms=t,this.currentTerm=this.getTerm(i.Gb.ConstantTermId.CurrentTerm),this.upcomingTerm=this.getTerm(i.Gb.ConstantTermId.UpcomingTerm)}getTerm(e){return this.terms.filter((t=>t.id===e))[0]}static decorateTerm(e,t){return e.id=t,e.ui={type:t},e}createYearTerm(e){const t=e.getFullYear(),s="year-"+t;let r=this.getTerm(s);return r||(r=new this.TermModel,r.id=s,r.ui={type:"year",year:t},r.startDate=new Date(t,0),this.addTerm(r)),r}addTerm(e){if(e)for(let t=0;t<this.terms.length;t++)if(this.terms[t].startDate>=e.startDate||this.terms[t]===this.currentTerm)return void this.terms.splice(t,0,e)}filterTerm(e){return this.terms.filter((t=>!!i.Gb.TermDuration.DateRange.isEqualTo(t.durationType)&&r.a.isWithinDateRange(e,{start:t.startDate,end:t.endDate})))}}},ap1t:function(e,t,s){"use strict";var r=s("D57K"),i=s("Llzl"),a=s("nsO7"),n=s("d8yC"),o=s("en1n"),l=s("0JpG"),d=s("Fvsw"),c=s("X/qj"),u=s("yMoE"),m=s("pjml"),h=s("TnpK"),p=s("g66W"),b=s("fYJU"),g=s("ooAF"),v=s("nmzr"),y=s("zGdY"),f=s("aHpC"),G=s("qH3X");s.d(t,"a",(function(){return C}));const C="ultra.components.directives.grade.displayGradePill",S="--",T="na";let w=class{constructor(e,t,s,r,i,a,n,l,d){this.$injector=e,this.$sce=t,this.scope=s,this.element=r,this.bbLocalize=i,this.context=a,this.ultraState=n,this.gradebookPermissionService=l,this.contextUser=d;const c=this.scope.column()&&this.scope.column().courseId;this.bundlePromise=i.loadBundle("components/directives/grade/display-grade"),this.canViewGradebook=this.hasViewGradebook(c),this.isStudent=d.userModel.isStudent(),this.isInstructor=d.userModel.isInstructor(),this.canViewGrades=this.hasViewGrades(c),this.canViewGrades?(this.scope.$watch("::column()",(e=>{if(e){this.scope.$watchGroup(["column()","attempt()","grade()"],(()=>{this.scope.grade&&this.scope.grade();this.createGradeDisplayItem(this.scope).then((e=>{this.gradeDisplayItem=e,this.setFullDisplayValue()}))}))}})),this.scope.$watch((()=>o.g()),(()=>{this.displayValue&&this.setFullDisplayValue()}))):this.displayValue=S,s.$on(G.a.REFRESH_OVERALL_EDITOR,(()=>{this.gradeDisplayItem.displayValue||this.shouldShowPendingForGrade()||this.shouldShowPendingForAttempt()||this.setNoSubmitView()}))}hasViewGradebook(e){return this.gradebookPermissionService.canView(e)}hasViewGrades(e){return this.isStudent||this.gradebookPermissionService.canViewGrades(e)}shouldShowPendingForGrade(){const e=this.scope.grade;return e&&e()&&!e().isPosted()&&e().hasAttempts()}shouldShowPendingForAttempt(){const e=this.scope.attempt;return e&&e()&&e().isNeedsGrading()}shouldRenderInlineRubric(){const e=this.scope.grade;return this.rubricEvaluationIsComplete()||this.shouldShowPendingForGrade()||this.shouldShowPendingForAttempt()||e().isPastDueZero()}shouldShowExempt(){var e;const t=this.scope.grade;return!!(null===(e=null==t?void 0:t())||void 0===e?void 0:e.isExempt)}isCurrentUserGrader(){return this.contextUser.userModel.memberships.every((e=>e.role===y.V.Grader))}setNoSubmitView(){this.schema&&this.scaleType&&(this.scaleType===y.ac.Percent?this.displayValue="-- %":this.scaleType!==y.ac.Score||this.shouldShowExempt()?this.displayValue=S:this.bundlePromise.then((()=>{var e,t,s,r,i,a;const o=null===(e=this.scope)||void 0===e?void 0:e.grade(),l=null!=(null==o?void 0:o.manualGrade)?o.pointsPossible:null===(s=null===(t=this.scope)||void 0===t?void 0:t.column())||void 0===s?void 0:s.possible,d=null!==(a=null!=l?l:null===(i=null===(r=this.scope)||void 0===r?void 0:r.column())||void 0===i?void 0:i.possible)&&void 0!==a?a:0;this.displayValue=S+this.bbLocalize.translateSync({locale:this.bbLocalize.getLocale(this.scope),key:"components.directives.grade.display-grade.total",params:{total:n.b(d,2)},noWrap:!0})})))}get colorClass(){return this.canViewGrades?this.gradeDisplayItem?this.gradeDisplayItem.displayValue||this.shouldShowExempt()?this.gradeDisplayItem.getGradeColor():this.isStudent?this.shouldShowPendingForGrade()||this.shouldShowPendingForAttempt()?"na pending":"na no-attempt":"":"":T}setFullDisplayValue(){if(this.displayValue=this.gradeDisplayItem&&this.gradeDisplayItem.displayValue,this.gradeDisplayItem.displayValue)this.shouldShowPossiblePoints()&&this.isSchemaTypeScore()?this.bundlePromise.then((()=>{this.displayValue=this.bbLocalize.translateSync({locale:this.bbLocalize.getLocale(this.scope),key:"components.directives.grade.display-grade.score",params:{grade:this.gradeDisplayItem.displayValue,possible:n.b(this.scope.grade&&this.scope.grade().pointsPossible||this.scope.column().possible,2)},noWrap:!0,noEscape:!0})})):this.isDiscussionOrJournal()||this.isSchemaTypeLetterOrPercentage()?this.displayValue=this.shouldShowPossiblePoints()||!this.shouldShowExempt()||this.isSchemaTypeLetterOrPercentage()?this.gradeDisplayItem.displayValue:S:this.displayValue=this.shouldShowExempt()&&!this.scope.column().isScorm()?S:this.gradeDisplayItem.displayValue;else if(this.shouldShowExempt())this.displayValue=S;else if(this.isStudent&&(this.shouldShowPendingForGrade()||this.shouldShowPendingForAttempt()))this.bundlePromise.then((()=>{this.displayValue=this.bbLocalize.translateSync({locale:this.bbLocalize.getLocale(this.scope),key:"components.directives.grade.display-grade.pending-grade",noWrap:!0})}));else{this.shouldShowExempt()&&this.gradeDisplayItem.getGradeColor();this.setNoSubmitView()}}get isStacked(){return!!this.scope.displayStacked}get cursorClass(){return this.scope.cursor?`cursor-${this.scope.cursor}`:""}isSchemaTypeLetterOrPercentage(){return this.scaleType===y.ac.Percent||this.scaleType===y.ac.Tabular}isSchemaTypeScore(){return this.scaleType===y.ac.Score}isDiscussionOrJournal(){return this.scope.column().isDiscussion()||this.scope.column().isJournal()}shouldShowPossiblePoints(){var e,t,s,r;return this.shouldShowExempt()?(null===(t=null===(e=this.scope.grade())||void 0===e?void 0:e.displayGrade)||void 0===t?void 0:t.isOverride)||(null===(r=null===(s=this.scope.grade())||void 0===s?void 0:s.displayGrade)||void 0===r?void 0:r.scoredByAutomaticZero)||this.gradeDisplayItem.shouldShowTotalPoints():!this.isSmallBP()&&this.gradeDisplayItem&&!a.isNaN(parseFloat(this.gradeDisplayItem.displayValue))&&this.gradeDisplayItem.shouldShowTotalPoints()}isSmallBP(){return o.a.Small===o.f()}shouldShowRubricButton(){var e,t,s;return!(this.scope.hideRubricIcon||!this.scope.column()||!this.scope.column().hasRubricAssociation())&&(!!this.isDiscussionOrJournal()||(null!=this.scope.attempt||!(!this.scope.column().isSingleAttempt()||y.l.InProgress===(null===(s=null===(t=null===(e=this.scope.grade())||void 0===e?void 0:e.ui)||void 0===t?void 0:t.attempt)||void 0===s?void 0:s.status))))}rubricEvaluationIsComplete(){const e=this.scope.column();if(e&&e.hasRubricAssociation()){const t=this.scope.attempt?this.scope.attempt():this.scope.grade().ui.attempt;return e.getRubricAssociation().isWithEvaluations&&(t&&t.isCompleted()||e.isDiscussion()||e.isJournal())}return!1}openRubricEvaluation(e){if(this.scope.disableRubricEvalClick&&this.scope.disableRubricEvalClick())return;e.stopPropagation();const t=this.getRubricStateRef();this.ultraState.current.name.endsWith("peek.assessment-submission-feedback")&&this.ultraState.leavePeekState(this.ultraState.current.name),this.ultraState.goPeekState(t.state,t.args)}getRubricStateRef(){var e;let t,s;(this.scope.grade||this.scope.attempt)&&(this.scope.attempt&&(t=null!==(e=this.scope.attempt().groupAttemptId)&&void 0!==e?e:this.scope.attempt().id),this.scope.grade&&this.scope.grade().ui&&this.scope.grade().ui.attempt&&this.scope.grade().ui.attempt.id&&(t=this.scope.grade().ui.attempt.id||this.scope.grade().ui.attempt.groupAttemptId),s=this.scope.attempt?this.scope.attempt().groupId:null,this.scope.grade&&this.scope.grade().ui.groupAttempt&&(s=this.scope.grade().ui.groupAttempt.groupId));const r={state:"",args:{attemptId:t||null,columnId:this.scope.column().id||null,contentId:this.scope.column().contentId||null,courseId:this.scope.column().courseId}};let i="inline-rubric";if(this.scope.isManualStatusPosted||this.gradeDisplayItem.displayValue&&"0"!==this.gradeDisplayItem.displayValue||this.scope.isExternalSubmission||this.scope.column().isCollectExternalSubmissions()||(i=this.shouldRenderInlineRubric()?"inline-rubric":"peek.rubric-view"),this.canViewGradebook||this.isDiscussionOrJournal()){const e=this.rubricEvaluationIsComplete()?"rubric-evaluation":"rubric-view";r.args.groupId=s||null,r.args.userId=this.scope.grade&&this.scope.grade().user&&(this.scope.grade().user.$pk||this.scope.grade().user.id)||null,r.state=e,this.scope.column().isJournal()&&(r.state=this.rubricEvaluationIsComplete()?v.B.JOURNAL_VIEW_WITH_PARTICIPATION_AND_RUBRIC_EVALUATION:v.B.JOURNAL_VIEW_WITH_PARTICIPATION_AND_RUBRIC_VIEW)}else r.args.groupId=s||null,r.state=`${v.c.ASSESSMENT_ATTEMPT_REVIEW}.${i}`;return p.d(this.ultraState.current.name,".peek.course.grades")&&(this.scope.column().isCollectExternalSubmissions()?(r.state=`${v.c.ASSESSMENT_ATTEMPT_REVIEW}.inline-rubric`,r.args.skipTransitionEvents=!0):r.state="assessment.overview"),r}createGradeDisplayItem(e){const t=this.scope.grade&&this.scope.grade(),s=this.$injector.instantiate(u.a,{gradeDetail:t,scope:e});return s.init(this.scope.column()).then((()=>{let e;return this.schema=s.schema,this.schema&&(this.scaleType=s.schema.scaleType),this.scope.attempt?e=this.scope.attempt().displayGrade:t&&this.schema&&(e=t.displayGrade),s.displayGrade=e,s}))}};w=Object(r.a)([Object(r.c)(0,Object(f.b)("$injector")),Object(r.c)(1,Object(f.b)("$sce")),Object(r.c)(2,Object(f.b)("scope")),Object(r.c)(3,Object(f.b)("element")),Object(r.c)(4,Object(f.b)(l.serviceName)),Object(r.c)(5,Object(f.b)(d.b)),Object(r.c)(6,Object(f.b)(h.d)),Object(r.c)(7,Object(f.b)(c.b)),Object(r.c)(8,Object(f.b)(b.b))],w);class I{constructor(e){this.$injector=e,this.restrict="E",this.template=g,this.scope={attempt:"&?",column:"&",disableRubricEvalClick:"&?",grade:"&?",isManualStatusPosted:"<?",cursor:"@?",hideRubricIcon:"=?",isExternalSubmission:"=?",rubricStateOverride:"@?",displayStacked:"@?"},this.link=(e,t)=>{if(!e.attempt&&!e.grade)throw new Error("An attempt or grade must be included on scope");if(e.attempt&&e.grade)throw new Error("An attempt or grade should be included on scope, not both");if(!e.column)throw new Error("A column must be included on scope");e.displayGradePill=this.$injector.instantiate(w,{scope:e,element:t})}}}I.$inject=["$injector"],i.module(C,[m.N,c.a]).directive("bbDisplayGradePill",["$injector",e=>e.instantiate(I)])},bSaK:function(e,t,s){"use strict";var r=s("D57K"),i=s("Sa5G"),a=s("0JpG"),n=s("lEL+"),o=s("yC9S"),l=s("lbhN"),d=s("GbAM");s.d(t,"a",(function(){return c}));const c="ultra.components.directives.courseAccessAlert";let u=class{constructor(e,t,s){this.$scope=e,this.bbLocalize=t,this.timeout=s}$onInit(){this.createAutoHideTimeout(5e3),this.sendConversionTooltipAlert()}cancelAutoHide(){this.autoHideTimeout&&(this.timeout.cancel(this.autoHideTimeout),this.autoHideTimeout=null)}autoHideAgain(){this.createAutoHideTimeout(1e3)}createAutoHideTimeout(e){this.autoHideTimeout&&this.timeout.cancel(this.autoHideTimeout),this.autoHideTimeout=this.timeout((()=>{this.timeoutCallback()}),this.$scope,e)}sendConversionTooltipAlert(){if(this.alertType===i.i.ConversionComplete||this.alertType===i.i.ConversionInProgress){const e=this.bbLocalize.translateSync({locale:this.bbLocalize.getLocale(this.$scope),key:this.alertType.keys.ariaAlertKey,noWrap:!0,noEscape:!0,params:{courseTitle:this.course.displayName}});this.$scope.$root.$broadcast(d.a,e)}}};u.$inject=["$scope",a.serviceName,n.b],u=Object(r.a)([Object(o.a)({moduleName:c,componentName:"bbCourseAccessAlert",template:l,bindings:{course:"<",alertType:"<",confirmCallback:"&",timeoutCallback:"&"},controllerAs:"accessAlert"})],u)},eTv5:function(e,t){e.exports='<div class="element-card tile {{courseColorClass}} base-grades-course-tile" ng-class="($parent.$last && $parent.$first) ? \'base-grades-only-card\' : \'\'">\n  <div class="clearfix">\n\n    <div class="row grades-header">\n      <div class="columns small-7" bb-click-to-invoke-child="a.bb-click-target">\n        <span class="course-number">{{course.courseId}}</span>\n        <a class="bb-click-target js-base-grades-course-button"\n           href="javascript:void(0);"\n           ng-click="baseGradesGrader.handleCourseClick()"\n           ng-attr-aria-describedby="{{baseGradesGrader.externalGradeSummary.averageGradeForStudentsSchemaValue !== undefined\n           ? \'avgGrade_\' + course.id : undefined}}"\n           analytics-id="components.directives.grade.baseGradesGrader.course.link">\n          <h3 class="subheader">{{course.name}}</h3>\n        </a>\n        <bb-schedule-outline class="schedule" schedule-outline-collection="course.schedule"></bb-schedule-outline>\n      </div>\n\n      <div class="columns small-5 grade-grader">\n        <bb-telemetry-link course-id="course.id" context-type="\'baseGrades\'"></bb-telemetry-link>\n        \x3c!--Current Grade--\x3e\n        <bb-display-grade column="baseGradesGrader.externalGradeColumn"\n                          summary="baseGradesGrader.externalGradeSummary"\n                          display-type="FinalBase"\n                          translate-key="components.directives.grade.base-grades-grader.average"\n                          cursor-default="true"\n                          id="avgGrade_{{course.id}}"\n                          course="course"></bb-display-grade>\n      </div>\n    </div>\n\n    \x3c!--Display "no content" message if there is no gradable content--\x3e\n    <div class="row" ng-if="!baseGradesGrader.hasGradeItems">\n      <div class="columns small-12 base-grades-empty-element">\n        <div class="base-grades-empty-state text-center">\n          <p class="main" bb-translate>components.directives.grade.base-grades-grader.noContentHeader</p>\n        </div>\n      </div>\n    </div>\n\n    <div class="row" ng-if="!baseGradesGrader.hasGradeItems">\n      <div class="columns small-12 grades-toggle-wrapper js-toggle-no-grade-items">\n        <a class="grades-toggle right"\n           bb-peek-sref="course.outline({courseId:course.id})"\n           analytics-id="components.directives.grade.base-grades-grader.noContentBody"\n           bb-translate>components.directives.grade.base-grades-grader.noContentBody</a>\n      </div>\n    </div>\n\n    \x3c!--Display "all graded" message if gradable content exists and has all been graded/posted--\x3e\n    <div class="row " ng-if="!baseGradesGrader.showAllGrades && baseGradesGrader.hasGradeItems && (baseGradesGrader.defaultColumns.length === 0)">\n      <div class="columns small-12 base-grades-empty-element">\n        <div class="base-grades-empty-state text-center">\n          <p class="main" bb-translate>\n            {{baseGradesGrader.course.isUltra() ? \'components.directives.grade.base-grades-grader.allGraded\' : \'components.directives.grade.base-grades-grader.allGradedForClassicCourse\'}}\n          </p>\n        </div>\n      </div>\n    </div>\n\n    \x3c!--Default Grades (display if "all grades" toggle is OFF and default columns exist)--\x3e\n    <div id="grades-default" ng-if="!baseGradesGrader.showAllGrades && (baseGradesGrader.defaultColumns.length > 0)">\n      <bb-grader-column ng-if="baseGradesGrader.allCategoriesLoaded"\n                        ng-class="{\'last-tabular-row-container\':$last}"\n                        ng-repeat="column in baseGradesGrader.defaultColumns"\n                        category-map="baseGradesGrader.categoryMap"\n                        column="column"\n                        course="course"\n                        is-course-view="false"\n                        data-column-id="{{column.id}}"\n                        data-content-id="{{column.contentId}}"\n                        attendance-is-available="baseGradesGrader.attendanceIsAvailable"></bb-grader-column>\n      <bb-guidance ng-if="$parent.$parent.$first" id="guidance-moment-grade-click" component-key="grades.grader.base.column.clickItem"\n                   class="guidance-grade-base-click-item guidance-element-overlay" role="tooltip">\n        <bb-translate>components.directives.grade.base-grades-grader.ftue.clickItem</bb-translate>\n      </bb-guidance>\n    </div>\n\n    \x3c!--All Grades (display if "all grades" toggle is ON and gradable items exist)--\x3e\n    <div id="grades-all" ng-if="baseGradesGrader.showAllGrades && baseGradesGrader.hasGradeItems">\n      \x3c!--Grader column--\x3e\n      <bb-grader-column ng-if="baseGradesGrader.allCategoriesLoaded"\n                        ng-class="{\'last-tabular-row-container\':$last}"\n                        ng-repeat="column in baseGradesGrader.allColumns"\n                        category-map="baseGradesGrader.categoryMap"\n                        column="column"\n                        course="course"\n                        is-course-view="false"\n                        data-column-id="{{column.id}}"\n                        data-content-id="{{column.contentId}}"\n                        attendance-is-available="baseGradesGrader.attendanceIsAvailable"></bb-grader-column>\n    </div>\n\n    <div class="row" ng-if="baseGradesGrader.hasGradeItems">\n      <div class="columns small-12 grades-toggle-wrapper js-toggle-has-grade-items" ng-if="baseGradesGrader.allColumns.length > baseGradesGrader.defaultColumns.length">\n        \x3c!--View all link--\x3e\n        <ng-switch on="baseGradesGrader.showAllGrades">\n          <button ng-switch-when="false"\n             class="grades-toggle button-anchor right"\n             ng-click="baseGradesGrader.clickShowAll()"\n             aria-expanded="{{!baseGradesGrader.showAllGrades ? false : true}}"\n             bb-translate-attrs="{\'aria-label\': \'components.directives.grade.base-grades-grader.aria-label.viewAll\'}"\n             translate-attrs-values="{courseName: course.name, count: baseGradesGrader.allColumns.length}"\n             analytics-id="components.directives.grades.baseGrades.viewAll.button">\n            <span bb-translate translate-values="{ count: baseGradesGrader.allColumns.length }">\n              components.directives.grade.base-grades-grader.viewAll\n            </span>\n          </button>\n          <button ng-switch-when="true"\n             class="grades-toggle button-anchor right"\n             ng-click="baseGradesGrader.showAllGrades = !baseGradesGrader.showAllGrades"\n             aria-expanded="{{!baseGradesGrader.showAllGrades ? false : true}}"\n             bb-translate-attrs="{\'aria-label\': \'components.directives.grade.base-grades-grader.aria-label.hide\'}"\n             translate-attrs-values="{courseName: course.name}"\n             analytics-id="components.directives.grades.baseGrades.hide.button">\n            <span bb-translate>\n              components.directives.grade.base-grades-grader.hide\n            </span>\n          </button>\n        </ng-switch>\n      </div>\n    </div>\n  </div>\n\n  <div ng-if="baseGradesGrader.showConversionMessage">\n    <bb-course-access-alert course="course"\n                            alert-type="baseGradesGrader.getAlertType()"\n                            confirm-callback="baseGradesGrader.closeConversionTooltip()"\n                            timeout-callback="baseGradesGrader.closeConversionTooltip()">\n    </bb-course-access-alert>\n  </div>\n</div>\n'},fzAu:function(e,t,s){"use strict";(function(e){s.d(t,"a",(function(){return I}));var r=s("nsO7"),i=s("Llzl"),a=s("Fvsw"),n=s("ZzN+"),o=s("bSaK"),l=s("dJ97"),d=s("Sa5G"),c=s("P2dS"),u=s("pKNj"),m=s("o5Lu"),h=s("0JpG"),p=s("pjml"),b=s("wgY5"),g=s("zByx"),v=s("IbyE"),y=s("unHm"),f=s("lEL+"),G=s("TnpK"),C=s("fYJU"),S=s("eTv5"),T=s("nmzr"),w=s("yC9S");const I="ultra.components.directives.grade.baseGradesGrader";class x{constructor(e,t,s,a,n,o,l,d,c,u,h){this.scope=e,this.$q=t,this.course=a,this.grade=n,this.bbLocalize=o,this.ultraState=l,this.timeout=d,this.categoryService=c,this.courseConversionService=u,this.contextUser=h,this.showAllGrades=!1,this.categoryMap={},this.allCategoriesLoaded=!1,this.showConversionMessage=!1,this.attendanceIsAvailable=!1,this.bbLocalize.loadBundle("components/directives/grade/base-grades-grader").then((()=>{this.course.$then((()=>{this.course.schedule.$resolve(),this.userId=h.userId,this.loadColumns(),this.course.isToolAvailable("bb-attendance").then((e=>{this.attendanceIsAvailable=e}))}))})),e.$on("$stateChangeSuccess",(()=>{this.contentUpdated&&(this.loadColumns(),this.contentUpdated=!1)})),e.$on("attempt-base-content-update",((e,t,s)=>{if(this.allColumns&&this.course.id===s){const e=this.allColumns.filter((e=>t.id===e.contentId));e.length>0&&e.forEach((e=>{e.$fetch()}))}})),e.$on("updateContent",(()=>{this.contentUpdated=!0})),e.$on("deleteContent",((e,t)=>{const s=i.element("[data-content-id='"+t.id+"']");s.length&&this.removeColumn(s.attr("data-column-id"))})),e.$on("bb-delete-column",((e,t)=>{this.removeColumn(t.id)})),e.$on(m.d,((e,t,s,i)=>{if(this.externalGradeSummary&&this.externalGradeSummary.$fetch(),this.allColumns&&this.course.id===i){const e=r.findIndex(this.allColumns,(e=>e.id===t.id));e>-1&&(this.allColumns[e].visible=t.visible,this.allColumns[e].columnName=t.columnName)}})),this.scope.$on("content-update",((e,t)=>{if(t.isScorm()){t.getScormGradebookItems().map((e=>e.gradingColumn)).forEach((e=>{if(this.allColumns&&this.course.id===t.courseId){const t=r.findIndex(this.allColumns,(t=>t.id===e.id));t>-1&&(this.allColumns[t].visible=e.visible,this.allColumns[t].columnName=e.columnName)}}))}})),e.$on("bb-update-summary",(()=>{this.loadColumns()})),w.b.OnRootScope(e,m.f,((e,t)=>{this.contentUpdated=!0}))}handleCourseClick(){this.course.refreshConvertToUltraStatus().then((()=>{this.courseConversionService.isConversionComplete(this.course.ui.convertToUltraTaskStatus)?this._openCourseGrades():this.showConversionTooltip()}))}_openCourseGrades(){this.course.isUltra()?this.ultraState.goPeekState(T.o.COURSE_GRADES,{courseId:this.course.id}):this.ultraState.goPeekState("course.outline",{courseId:this.course.id,legacyUrl:this.getLegacyUrl()})}showConversionTooltip(){this.showConversionMessage=!0}closeConversionTooltip(){this.showConversionMessage=!1}getAlertType(){return d.i.ConversionInProgress}removeColumn(e){if(e){const t=this.allColumns&&this.allColumns.find((t=>e===t.id)),s=t&&t.contentId||null;this.allColumns&&(this.allColumns=this.allColumns.filter((t=>e!==t.id&&s!==t.contentId)),this.hasGradeItems=!!this.allColumns.length),this.defaultColumns&&(this.defaultColumns=this.defaultColumns.filter((t=>e!==t.id&&s!==t.contentId)))}}loadColumns(){this.grade.loadColumns(this.course.id,!0,{expand:"collectExternalSubmissions"}).then((e=>this.course.gradebook.summaries.expandingColumns(e,{numSubmissionsTotal:0,numSubmissionsNeedsGrading:0}).$fetch({excludeCalculations:!0}).$asPromise().then((()=>e)))).then((e=>e.attachRelatedContentsByScoreProviderHandle(v.Q.Scorm))).then((e=>{const t=r.remove(e,(e=>e.externalGrade));t.length>0&&(this.externalGradeColumn=t[0],this.externalGradeColumn.forceFetchSummary({excludePreviewUser:!0}).$then((e=>{this.externalGradeSummary=e})));const s=e.filter((e=>!1!==e.visibleInBook));this.hasGradeItems=!!s.length,this.groupColumns(s,this.course.isUltra()),this.loadCategories(s)}))}loadCategories(e){this.categoryService.getOrLoadCategoriesForCourse(this.course.id).then((t=>{t.forEach((e=>{this.categoryMap[e.id]=e})),e&&e.forEach((e=>{if(e.gradebookCategoryId){const t=this.categoryMap[e.gradebookCategoryId];e.categoryTitle=t&&t.title}})),this.allCategoriesLoaded=!0}))}getLegacyUrl(){return"/webapps/gradebook/do/instructor/enterGradeCenter?course_id="+this.course.id}groupColumns(e,t){this.defaultColumns=[];const s=[];e.forEach((e=>{this.defaultColumns.length<x.MAX_DEFAULT_COLUMNS_LENGTH&&x.isDefaultColumn(e,t)?this.defaultColumns.push(e):s.push(e)})),this.defaultColumns=r.sortBy(this.defaultColumns,(e=>e.dueDate));const i=r.groupBy(s,(e=>e.summary.getStatus()));this.allColumns=this.defaultColumns.concat(this.concatColumnGroups(i))}static isDefaultColumn(e,t){if(t){const t=e.seemsAttemptBased()&&e.summary.numEligibleToBeGraded>e.summary.numStudentSubmissions();return e.summary.numNeedsGrading>0||e.summary.totalNumberOfGradesToPost()>0||t&&x.isDueDateCloseToNow(e)}return e.summary.numNeedsGrading>0}static isDueDateCloseToNow(e){const t=b(),s=b(e.dueDate).subtract({days:1}),r=b(e.dueDate).add({days:7});return t.isAfter(s)&&t.isBefore(r)}concatColumnGroups(e){let t=[];const s=e[p.k.ColumnSummaryStatus.NeedsGrading.toString()],r=e[p.k.ColumnSummaryStatus.NeedsPosting.toString()],i=e[p.k.ColumnSummaryStatus.AllGraded.toString()],a=e[p.k.ColumnSummaryStatus.AllPosted.toString()],n=e[p.k.ColumnSummaryStatus.NothingToGrade.toString()];return s&&(t=t.concat(s)),r&&(t=t.concat(r)),i&&(t=t.concat(i)),a&&(t=t.concat(a)),n&&(t=t.concat(n)),t}clickShowAll(){this.showAllGrades=!this.showAllGrades,this.timeout((()=>{e("#graderColumn_"+this.scope.course.courseId).focus()}),this.scope,500)}}x.$inject=["scope","$q",a.b,"course",m.n,h.serviceName,G.d,f.b,c.c,n.b,C.b],x.MAX_DEFAULT_COLUMNS_LENGTH=5;class D{constructor(e){this.$injector=e,this.restrict="E",this.template=S,this.scope={course:"=",courseColorClass:"=",previousTerm:"="},this.link=e=>{e.baseGradesGrader=this.$injector.instantiate(x,{course:e.course,scope:e})}}}D.$inject=["$injector"],i.module(I,[a.a,n.a,o.a,l.a,u.a,m.m,h.moduleName,p.N,g.a,y.a]).directive("bbBaseGradesGrader",["$injector",e=>e.instantiate(D)])}).call(this,s("71td"))},h3DF:function(e,t,s){},lbhN:function(e,t){e.exports='<div class="course-alert-container" \n     bb-click-outside="accessAlert.timeoutCallback()" \n     is-active="true"\n     ng-mouseenter="accessAlert.cancelAutoHide()"\n     ng-mouseleave="accessAlert.autoHideAgain()"\n     role="alertdialog" \n     id="alert-dialog" \n     tabindex="-1">\n\n  <div class="access-alert alert-msg-container" tabindex="-1" aria-hidden="true">\n    <h4 class="text-center" bb-translate>{{::accessAlert.alertType.keys.titleKey}}</h4>\n    <p bb-translate>{{::accessAlert.alertType.keys.bodyKey}}</p>\n    <button class="button button--secondary" \n            ng-click="accessAlert.confirmCallback()" \n            bb-translate\n            analytics-id="{{::accessAlert.alertType.keys.buttonKey}}">\n      {{::accessAlert.alertType.keys.buttonKey}}\n    </button>\n  </div>\n</div>'},"oK+F":function(e,t,s){var r=s("ziER"),i=s("5JeM"),a=new r({id:"icon-medium-beast-analytics",use:"icon-medium-beast-analytics-usage",viewBox:"0 0 24 24",content:'<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" id="icon-medium-beast-analytics"><path d="M12 23c6.0751 0 11-4.9249 11-11S18.0751 1 12 1 1 5.9249 1 12s4.9249 11 11 11z" stroke-width="2" stroke-miterlimit="10" /><path d="M15.3 1.1L12 12l10.3-4.9M12 12l8.3 8" stroke-width="2" stroke-miterlimit="10" stroke-linejoin="round" /></symbol>'});i.add(a);e.exports=a},ooAF:function(e,t){e.exports='<div class="grade-color" ng-class="{\'flex-column\': displayGradePill.isStacked}">\n    <div class="wrapping-input-style readonly pill-style {{displayGradePill.colorClass}} {{displayGradePill.cursorClass}}">\n      <div ng-if="!displayGradePill.shouldShowRubricButton()">\n        <span class="grade-input-display grade-ellipsis"><bdi>{{displayGradePill.displayValue}}</bdi></span>\n      </div>\n      <div ng-if="displayGradePill.shouldShowRubricButton()">\n        <a ng-click="displayGradePill.openRubricEvaluation($event)"\n           ng-class="{\'disable-click\': !!disableRubricEvalClick()}"\n           class="grade-rubric-detail"\n           aria-disabled="{{!!disableRubricEvalClick()}}"\n           href=""\n           analytics-id="components.directives.grade.gradePill.showRubric.link">\n          <bb-svg-icon size="small" icon="rubric"></bb-svg-icon>\n          <span class="grade-input-display ready grade-ellipsis">{{displayGradePill.displayValue}}</span>\n        </a>\n      </div>\n    </div>\n    <div ng-if="displayGradePill.shouldShowExempt()" class="left">\n      <span class="exempt-indicator" bb-translate>components.directives.grade.grade-input.exempt</span>\n    </div>\n</div>\n'},ufNb:function(e,t,s){var r=s("ziER"),i=s("5JeM"),a=new r({id:"icon-medium-away",use:"icon-medium-away-usage",viewBox:"0 0 24 24",content:'<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" id="icon-medium-away"><path d="M23 12c0 6.0751-4.9249 11-11 11S1 18.0751 1 12 5.9249 1 12 1s11 4.9249 11 11z" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" /><path d="M12 5v7l4 4" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" /></symbol>'});i.add(a);e.exports=a},unHm:function(e,t,s){"use strict";s.d(t,"a",(function(){return o}));s("oK+F");var r=s("Llzl"),i=s("Fvsw"),a=s("r6lH"),n=s("vyq4");const o="ultra.directives.telemetry.link";class l{constructor(e,t,s){this.scope=e,this.context=t,this.telemetry=s,this.courseId=e.courseId,this.contextType=e.contextType,t.getSystemInfo().$asPromise().then((e=>{e.telemetryEnabled&&this.telemetry.determinePanelSref(this.courseId).then((e=>{this.telemetryPanelSref=e,this.showLink=!0}))}))}analyticsContext(){return{contextType:this.contextType,courseId:this.courseId}}}l.$inject=["scope",i.b,a.b];class d{constructor(e){this.$injector=e,this.restrict="E",this.template=n,this.scope={courseId:"=",contextType:"="},this.link=e=>{e.telemetryLink=this.$injector.instantiate(l,{scope:e})}}}d.$inject=["$injector"],r.module(o,[i.a,a.a]).directive("bbTelemetryLink",["$injector",e=>e.instantiate(d)])},vyq4:function(e,t){e.exports='<span class="grade-progress-chart-btn" ng-if="::telemetryLink.showLink">\n  \x3c!-- htmlhint:analytics-id:disable --\x3e\n  <a class="grade-progress-chart-link"\n     bb-translate-attrs="{\'aria-label\':\'components.directives.grade.display-grade.openCourseProgress\', \'title\': \'components.directives.grade.display-grade.courseProgress\'}"\n     bb-peek-sref="{{telemetryLink.telemetryPanelSref}}"\n     analytics-id="grades.telemetry"\n     analytics-context="{{telemetryLink.analyticsContext()}}">\n    <bb-svg-icon icon="beast-analytics" size="medium"></bb-svg-icon>\n  </a>\n  \x3c!-- htmlhint:analytics-id:enable --\x3e\n</span>\n'},zByx:function(e,t,s){"use strict";s("ufNb"),s("82Nl");var r=s("Llzl"),i=s("0JpG"),a=s("7pcG"),n=s("Fvsw"),o=s("zGdY"),l=s("V0gA");const d="ultra.components.services.calendar.schedule",c="bbSchedule";class u{constructor(e,t,s){this.localize=e,this.calendar=t,this.context=s}getWeeklyRepeatLabel(e,t,s="medium",r){if(o.r.Weekly!==e.recurRules.freq)return"";let a;switch(s.trim().toLowerCase()){case"short":a=i.ILocaleDateFormat.ShortWeekday;break;case"medium":default:a=i.ILocaleDateFormat.MediumWeekday;break;case"long":a=i.ILocaleDateFormat.LongWeekday}return e.recurRules.byWeekDay.map((e=>Object(l.parseWeekDay)(e))).filter((e=>!!e)).sort(((e,t)=>Object(l.getDayOfWeek)(e)-Object(l.getDayOfWeek)(t))).map((e=>this.localize.formatDateSync(this.calendar.getSampleDateForDayOfWeek(Object(l.getDayOfWeek)(e)),a))).join(this.localize.translateSync({locale:r,key:t,options:{noWrap:!0}}))}getNextMonthlyEventDate(e,t){return this.updateDate(e,t,this.calendar.getNextEventForMonthlyRepeat(e.recurRules,this.context.getServerTime()))}getNextDailyEventDate(e,t){return this.updateDate(e,t,this.calendar.getNextEventForDailyRepeat(e.recurRules,this.context.getServerTime()))}updateDate(e,t,s){let r=t[e.itemSourceId];return r&&r.getTime()===s.getTime()||(t[e.itemSourceId]=s,r=s),r}}u.$inject=[i.serviceName,a.b,n.b];angular.module(d,[a.a,n.a,i.moduleName]).service(c,u);var m=s("4qUd");s.d(t,"a",(function(){return h}));const h="ultra.components.directives.calendar.scheduleOutline";class p{constructor(e,t,s){this.scope=e,this.scheduleService=t,this.localize=s,this.nextEventDates=Object.create(null),this.showMore=!1}getSchedules(){let e=this.scope.scheduleOutlineCollection();return this.orderScheduleByRecentDate(e),e.length>2?(this.showMore=!0,e=this.scope.scheduleOutlineCollection().slice(0,2),this.orderScheduleByRecentDate(e)):this.showMore=!1,e}orderScheduleByRecentDate(e){return e.sort(((e,t)=>{const s=this.getNextDateToSort(e),r=this.getNextDateToSort(t);let i=0;return s<r?i=-1:s>r&&(i=1),i}))}getNextDateToSort(e){switch(e.recurRules.freq){case"DAILY":return this.getNextDailyEventDate(e);case"MONTHLY":return this.getNextEventDate(e);default:return e.startDate}}getWeeklyRepeatLabel(e){return this.scheduleService.getWeeklyRepeatLabel(e,"scheduleOutline.weekdayDelimiter",this.scope.weekDayFormat,this.localize.getLocale(this.scope))}getNextEventDate(e){return this.scheduleService.getNextMonthlyEventDate(e,this.nextEventDates)}getNextDailyEventDate(e){return this.scheduleService.getNextDailyEventDate(e,this.nextEventDates)}areAnyLocationsSet(){return this.scope.scheduleOutlineCollection().some((e=>!!e.location))}}p.$inject=["scope",c,i.serviceName];class b{constructor(e){this.$injector=e,this.restrict="E",this.template=m,this.scope={scheduleOutlineCollection:"&",weekDayFormat:"@?"},this.link=e=>{e.scheduleOutline=this.$injector.instantiate(p,{scope:e}),e.TRUNCATION_LOCATION_COURSE_CARD=20,e.TRUNCATION_LOCATION_OUTLINE=35}}}b.$inject=["$injector"],r.module(h,[d]).directive("bbScheduleOutline",["$injector",e=>e.instantiate(b)])},zEHu:function(e,t,s){"use strict";s.d(t,"a",(function(){return a}));var r=s("Llzl"),i=s("jhBu");const a="ultra.components.directives.courseEntitlement";class n{constructor(e,t){this.$entitlementService=e,this.ngIfDirective=t,this.scope={bbCourseEntitlement:"@",courseId:"@",entitlementAction:"@",showContents:"@"},this.restrict=this.ngIfDirective[0].restrict,this.priority=this.ngIfDirective[0].priority,this.transclude=this.ngIfDirective[0].transclude,this.terminal=this.ngIfDirective[0].terminal,this.link=(e,t,s,r,i)=>{s.ngIf="::showContents";this.ngIfDirective[0].compile(t,s,void 0)(e,t,s,r,i);let a,n=!0;if(e.entitlementAction&&"hide"===e.entitlementAction.toLowerCase()&&(n=!1),!e.bbCourseEntitlement)throw e.showContents=!1,new Error("No entitlementUid has been provided");a=e.bbCourseEntitlement;const o=e.$parent.$watch(e.courseId,(t=>{t&&(this.$entitlementService.hasCourseEntitlement(a,t).then((t=>{e.showContents=n===t}),(t=>{e.showContents=!1})),o())}))}}}n.$inject=[i.b,"ngIfDirective","$parse"],r.module(a,[i.a]).directive("bbCourseEntitlement",["$injector",e=>e.instantiate(n)])},zdqs:function(e,t,s){"use strict";s.d(t,"a",(function(){return o}));var r=s("nsO7"),i=s("VdDF"),a=s("pjml"),n=s("zGdY");class o{constructor(e){this.termUtil=e,this.membershipTermMapper=new l(this.termUtil)}getMembershipMapper(){return this.membershipTermMapper}map(e,t){return e.map((e=>({membership:e,term:this.membershipTermMapper.adjustTerm(e,t)})))}}class l{constructor(e){this.termUtil=e}adjustTerm(e,t){const s=this.getCourseDateRange(e);return s.start>t?e.course.ui.term=this.termUtil.upcomingTerm:i.a.isWithinDateRange(t,s)?e.course.ui.term=this.termUtil.currentTerm:e.course.term?e.course.ui.term=e.course.term:e.course.ui.term=this.getTermMappingBasedOnCourseDates(e,s,t),e.course.ui.term}getCourseDateRange(e){let t,s;if(n.x.DateRange===e.course.durationType)t=e.course.startDate,s=e.course.endDate;else if(n.x.FixedNumDays===e.course.durationType)t=e.enrollmentDate,s=new Date(e.enrollmentDate.getTime()),s.setDate(s.getDate()+e.course.numDaysOfUse);else if(n.x.UseTerm===e.course.durationType){const r=e.course.term?this.termUtil.getTerm(e.course.term.id):null;r&&(a.Gb.TermDuration.DateRange.isEqualTo(r.durationType)?(t=r.startDate,s=r.endDate):a.Gb.TermDuration.FixedNumDays.isEqualTo(r.durationType)&&(t=e.enrollmentDate,s=new Date(e.enrollmentDate.getTime()),s.setDate(s.getDate()+r.daysOfUse)))}return{end:s,start:t}}getTermMappingBasedOnCourseDates(e,t,s){let i=t.start||e.course.term&&e.course.term.startDate;if(!i){if(!(t.end&&s>t.end))return this.termUtil.currentTerm;i=t.end}const a=this.termUtil.filterTerm(i);if(0===a.length)return this.termUtil.createYearTerm(i);if(1===a.length)return a[0];if(a.length>1){const e=r.sortBy(a,["startDate","id"]);return e[e.length-1]}}}}}]);